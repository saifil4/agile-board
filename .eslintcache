[{"D:\\agile-board\\src\\index.js":"1","D:\\agile-board\\src\\reportWebVitals.js":"2","D:\\agile-board\\src\\App.js":"3","D:\\agile-board\\src\\reducers\\rootReducer.js":"4","D:\\agile-board\\src\\actions\\actions.js":"5","D:\\agile-board\\src\\reducers\\selectedlabel.reducer.js":"6","D:\\agile-board\\src\\components\\task-lane\\LaneList.js":"7","D:\\agile-board\\src\\components\\task-lane\\Lane.js":"8","D:\\agile-board\\src\\components\\task-lane\\TaskList.js":"9","D:\\agile-board\\src\\components\\task-lane\\Task.js":"10","D:\\agile-board\\src\\components\\task-lane\\LaneTitle.js":"11","D:\\agile-board\\src\\reducers\\Search.reducer.js":"12","D:\\agile-board\\src\\components\\task-form\\NameInput.js":"13","D:\\agile-board\\src\\components\\task-form\\TaskTypeInput.js":"14","D:\\agile-board\\src\\components\\task-form\\DescriptionInput.js":"15","D:\\agile-board\\src\\components\\task-form\\LaneInput.js":"16","D:\\agile-board\\src\\components\\task-form\\TaskForm.js":"17","D:\\agile-board\\src\\components\\header\\Header.js":"18","D:\\agile-board\\src\\components\\header\\LabelDropdown.js":"19","D:\\agile-board\\src\\components\\task-form\\DueDateInput.js":"20","D:\\agile-board\\src\\components\\task-form\\PriorityInput.js":"21","D:\\agile-board\\src\\reducers\\LabelReducer.js":"22","D:\\agile-board\\src\\reducers\\LanesReducer.js":"23","D:\\agile-board\\src\\components\\ModalLoader.js":"24","D:\\agile-board\\src\\reducers\\FilteredLanesReducer.js":"25","D:\\agile-board\\src\\components\\Main.js":"26","D:\\agile-board\\src\\components\\label-form\\LabelForm.js":"27"},{"size":802,"mtime":1612924457896,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":284,"mtime":1615590677714,"results":"31","hashOfConfig":"29"},{"size":540,"mtime":1615589714672,"results":"32","hashOfConfig":"29"},{"size":1229,"mtime":1615671196152,"results":"33","hashOfConfig":"29"},{"size":248,"mtime":1613169629391,"results":"34","hashOfConfig":"29"},{"size":2561,"mtime":1615673049108,"results":"35","hashOfConfig":"29"},{"size":1503,"mtime":1615539995862,"results":"36","hashOfConfig":"29"},{"size":450,"mtime":1615540201747,"results":"37","hashOfConfig":"29"},{"size":2373,"mtime":1615589831321,"results":"38","hashOfConfig":"29"},{"size":1857,"mtime":1615671050053,"results":"39","hashOfConfig":"29"},{"size":236,"mtime":1614757885033,"results":"40","hashOfConfig":"29"},{"size":439,"mtime":1615434694820,"results":"41","hashOfConfig":"29"},{"size":842,"mtime":1615526080248,"results":"42","hashOfConfig":"29"},{"size":432,"mtime":1615435416713,"results":"43","hashOfConfig":"29"},{"size":1327,"mtime":1615525493437,"results":"44","hashOfConfig":"29"},{"size":3923,"mtime":1615535607740,"results":"45","hashOfConfig":"29"},{"size":1030,"mtime":1615540084967,"results":"46","hashOfConfig":"29"},{"size":2141,"mtime":1615590685267,"results":"47","hashOfConfig":"29"},{"size":423,"mtime":1615441205702,"results":"48","hashOfConfig":"29"},{"size":920,"mtime":1615441366791,"results":"49","hashOfConfig":"29"},{"size":792,"mtime":1615442580348,"results":"50","hashOfConfig":"29"},{"size":5136,"mtime":1615671302773,"results":"51","hashOfConfig":"29"},{"size":719,"mtime":1615535542384,"results":"52","hashOfConfig":"29"},{"size":243,"mtime":1615530127584,"results":"53","hashOfConfig":"29"},{"size":1278,"mtime":1615672975304,"results":"54","hashOfConfig":"29"},{"size":3612,"mtime":1615590838460,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1xvjlim",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\agile-board\\src\\index.js",[],["114","115"],"D:\\agile-board\\src\\reportWebVitals.js",[],"D:\\agile-board\\src\\App.js",["116"],"import React from 'react';\nimport './App.css';\n\n//importing components\nimport Main from './components/Main';\nimport LabelForm from './components/label-form/LabelForm';\n\n\nfunction App() {\n  return (\n    <main className=\"wrapper\">\n      <Main />\n    </main>\n  );\n}\n\nexport default App;\n","D:\\agile-board\\src\\reducers\\rootReducer.js",[],"D:\\agile-board\\src\\actions\\actions.js",[],"D:\\agile-board\\src\\reducers\\selectedlabel.reducer.js",[],"D:\\agile-board\\src\\components\\task-lane\\LaneList.js",["117"],"D:\\agile-board\\src\\components\\task-lane\\Lane.js",[],"D:\\agile-board\\src\\components\\task-lane\\TaskList.js",[],"D:\\agile-board\\src\\components\\task-lane\\Task.js",[],"D:\\agile-board\\src\\components\\task-lane\\LaneTitle.js",[],"D:\\agile-board\\src\\reducers\\Search.reducer.js",[],"D:\\agile-board\\src\\components\\task-form\\NameInput.js",[],"D:\\agile-board\\src\\components\\task-form\\TaskTypeInput.js",[],"D:\\agile-board\\src\\components\\task-form\\DescriptionInput.js",[],"D:\\agile-board\\src\\components\\task-form\\LaneInput.js",["118"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nconst LaneInput = ({ entity, laneId, setLaneId, entityType }) => {\r\n    const lanes = useSelector(state => state.Lanes);\r\n    const [laneName, setLaneName] = useState();\r\n\r\n    useEffect(() => {\r\n        if (laneId) {\r\n            setLaneName(lanes.find(lane => lane.id === parseInt(laneId)).lanename);\r\n        }\r\n    }, [laneId])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                laneId\r\n                    ?\r\n                    <Dropdown eventKey={laneId} onSelect={e => setLaneId(e)}>\r\n                        < Dropdown.Toggle eventKey={laneId} variant=\"success\" id=\"dropdown-basic\" >\r\n                            {laneName}\r\n                        </Dropdown.Toggle >\r\n                        <Dropdown.Menu>\r\n                            {\r\n                                lanes.map(lane => (\r\n                                    <Dropdown.Item eventKey={lane.id} >{lane.lanename}</Dropdown.Item>\r\n                                ))\r\n                            }\r\n                        </Dropdown.Menu>\r\n                    </Dropdown >\r\n                    :\r\n                    <span></span>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LaneInput;","D:\\agile-board\\src\\components\\task-form\\TaskForm.js",["119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { Modal, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTask, updateTask } from '../../actions/actions';\r\nimport NameInput from './NameInput';\r\nimport TaskTypeInput from './TaskTypeInput';\r\nimport DescriptionInput from './DescriptionInput';\r\nimport LaneInput from './LaneInput';\r\nimport DueDateInput from './DueDateInput';\r\nimport PriorityInput from './PriorityInput';\r\n\r\nconst TaskForm = ({ closeForm, entity, entityType }) => {\r\n\r\n    const [taskname, setTaskName] = useState('');\r\n    const [duedate, setDuedate] = useState('');\r\n    const [priority, setPriority] = useState('High');\r\n    const [description, setDescription] = useState('');\r\n    const [labelId, setLabelId] = useState();\r\n    const [laneId, setLaneId] = useState();\r\n\r\n    const Dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (entityType === \"task\") {\r\n            setTaskName(entity.taskname);\r\n            setDuedate(entity.duedate);\r\n            setPriority(entity.priority);\r\n            setDescription(entity.description);\r\n            setLabelId(entity.labelid);\r\n            setLaneId(entity.laneid);\r\n        } else if (entityType === \"lane\") {\r\n            setLaneId(entity.id);\r\n        }\r\n    }, [])\r\n\r\n    const CreateTask = (e) => {\r\n        e.preventDefault();\r\n        Dispatch(addTask(newtask()));\r\n        closeForm();\r\n    }\r\n\r\n    const UpdateTask1 = (e) => {\r\n        e.preventDefault();\r\n        Dispatch(updateTask(updatedtask()));\r\n        closeForm();\r\n    }\r\n\r\n\r\n    function newtask() {\r\n        return {\r\n            'id': Math.random() * 1000,\r\n            'taskname': taskname,\r\n            'description': description,\r\n            'duedate': duedate,\r\n            'priority': priority,\r\n            'labelid': labelId,\r\n            'laneid': laneId\r\n        }\r\n    }\r\n\r\n    function updatedtask() {\r\n        return {\r\n            'id': entity.id,\r\n            'taskname': taskname,\r\n            'description': description,\r\n            'duedate': duedate,\r\n            'priority': priority,\r\n            'labelid': labelId,\r\n            'laneid': laneId\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title as=\"h6\" id=\"contained-modal-title-vcenter\">\r\n                    New Task\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"8\">\r\n                                <TaskTypeInput labelId={labelId} setLabelId={setLabelId} />\r\n                                <NameInput taskname={taskname} setTaskName={setTaskName} />\r\n                                <DescriptionInput description={description} setDescription={setDescription} />\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <DueDateInput duedate={duedate} setDuedate={setDuedate} />\r\n                                <PriorityInput priority={priority} setPriority={setPriority} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {\r\n                    entityType === \"task\"\r\n                        ?\r\n                        <button className=\"main-btn yellow\" onClick={(e) => UpdateTask1(e)} type=\"submit\">Update Task</button>\r\n                        :\r\n                        <button className=\"main-btn yellow\" onClick={(e) => CreateTask(e)} type=\"submit\">Create Task</button>\r\n                }\r\n                <button className=\"main-btn grey\" variant=\"secondary\" onClick={closeForm}>Cancel</button>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","D:\\agile-board\\src\\components\\header\\Header.js",[],"D:\\agile-board\\src\\components\\header\\LabelDropdown.js",[],"D:\\agile-board\\src\\components\\task-form\\DueDateInput.js",[],"D:\\agile-board\\src\\components\\task-form\\PriorityInput.js",[],"D:\\agile-board\\src\\reducers\\LabelReducer.js",[],"D:\\agile-board\\src\\reducers\\LanesReducer.js",[],"D:\\agile-board\\src\\components\\ModalLoader.js",[],"D:\\agile-board\\src\\reducers\\FilteredLanesReducer.js",[],"D:\\agile-board\\src\\components\\Main.js",["121"],"D:\\agile-board\\src\\components\\label-form\\LabelForm.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":27,"column":28,"nodeType":"132","messageId":"133","endLine":27,"endColumn":30},{"ruleId":"134","severity":1,"message":"135","line":13,"column":8,"nodeType":"136","endLine":13,"endColumn":16,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"138","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":17},{"ruleId":"134","severity":1,"message":"139","line":34,"column":8,"nodeType":"136","endLine":34,"endColumn":10,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"141","line":31,"column":8,"nodeType":"136","endLine":31,"endColumn":46,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'LabelForm' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lanes'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'LaneInput' is defined but never used.","React Hook useEffect has missing dependencies: 'entity.description', 'entity.duedate', 'entity.id', 'entity.labelid', 'entity.laneid', 'entity.priority', 'entity.taskname', and 'entityType'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'entity.taskname', you can also switch to useReducer instead of useState and read 'entity.taskname' in the reducer.",["146"],"React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [laneId, lanes]",{"range":"154","text":"155"},"Update the dependencies array to be: [entity.description, entity.duedate, entity.id, entity.labelid, entity.laneid, entity.priority, entity.taskname, entityType]",{"range":"156","text":"157"},"Update the dependencies array to be: [selectedLabel, lanes, searchKeywords, filterHandler]",{"range":"158","text":"159"},[466,474],"[laneId, lanes]",[1315,1317],"[entity.description, entity.duedate, entity.id, entity.labelid, entity.laneid, entity.priority, entity.taskname, entityType]",[1112,1150],"[selectedLabel, lanes, searchKeywords, filterHandler]"]