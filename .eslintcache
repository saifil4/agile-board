[{"D:\\agile-board\\src\\index.js":"1","D:\\agile-board\\src\\reportWebVitals.js":"2","D:\\agile-board\\src\\App.js":"3","D:\\agile-board\\src\\components\\sidenav.js":"4","D:\\agile-board\\src\\components\\labelform.js":"5","D:\\agile-board\\src\\components\\main.js":"6","D:\\agile-board\\src\\components\\lanelist.js":"7","D:\\agile-board\\src\\components\\taskform.js":"8","D:\\agile-board\\src\\components\\lane.js":"9","D:\\agile-board\\src\\components\\tasklist.js":"10","D:\\agile-board\\src\\components\\task.js":"11"},{"size":584,"mtime":1611357483516,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1822,"mtime":1611615879343,"results":"15","hashOfConfig":"13"},{"size":1802,"mtime":1612339254351,"results":"16","hashOfConfig":"13"},{"size":1808,"mtime":1612339100375,"results":"17","hashOfConfig":"13"},{"size":3963,"mtime":1611615567011,"results":"18","hashOfConfig":"13"},{"size":1100,"mtime":1611615240362,"results":"19","hashOfConfig":"13"},{"size":4292,"mtime":1612339081868,"results":"20","hashOfConfig":"13"},{"size":1043,"mtime":1611615267830,"results":"21","hashOfConfig":"13"},{"size":486,"mtime":1611615292645,"results":"22","hashOfConfig":"13"},{"size":1055,"mtime":1611559654584,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xvjlim",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\agile-board\\src\\index.js",[],["48","49"],"D:\\agile-board\\src\\reportWebVitals.js",[],"D:\\agile-board\\src\\App.js",[],"D:\\agile-board\\src\\components\\sidenav.js",[],"D:\\agile-board\\src\\components\\labelform.js",[],"D:\\agile-board\\src\\components\\main.js",["50"],"import React, { useState, useEffect } from 'react';\r\nimport { Dropdown, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\n\r\n//importing components\r\nimport LaneList from './lanelist';\r\nimport TaskForm from './taskform';\r\n\r\n\r\nconst Main = ({ setNavOpenStatus, navOpenStatus, labelList, selectedLabel }) => {\r\n    const [taskFormShow, setTaskFormShow] = useState(false);\r\n    const [SortValue, setSortValue] = useState('Due Date');\r\n\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: Math.random() * 1000,\r\n            label: 'Bug',\r\n            labelid: 1,\r\n            taskname: 'Demo task',\r\n            description: 'this is a demo description',\r\n            duedate: '12th Feb 2021',\r\n            priority: 'High',\r\n            laneid: 1\r\n        },\r\n        {\r\n            id: Math.random() * 1000,\r\n            label: 'Story',\r\n            labelid: 2,\r\n            taskname: 'In progress task',\r\n            description: 'this is a demo description',\r\n            duedate: '12th Feb 2021',\r\n            priority: 'Medium',\r\n            laneid: 2\r\n        }\r\n    ]);\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n\r\n\r\n    const [lanes, setLanes] = useState([\r\n        {\r\n            id: 1,\r\n            lanename: 'Backlog'\r\n        },\r\n        {\r\n            id: 2,\r\n            lanename: 'Open'\r\n        },\r\n        {\r\n            id: 3,\r\n            lanename: 'In Progress'\r\n        },\r\n        {\r\n            id: 4,\r\n            lanename: 'Done'\r\n        }\r\n    ]);\r\n\r\n    const navStatusHandler = () => {\r\n        setNavOpenStatus(!navOpenStatus);\r\n    }\r\n\r\n    const SortValueHandler = (k) => {\r\n        console.log(k);\r\n        setSortValue(k);\r\n    }\r\n    const filterHandler = () => {\r\n        if (selectedLabel === 0) {\r\n            setFilteredTasks(tasks);\r\n        } else {\r\n            console.log(tasks.filter(t => t.labelid === selectedLabel));\r\n            console.log(tasks);\r\n\r\n            setFilteredTasks(tasks.filter(t => t.labelid === selectedLabel));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        filterHandler();\r\n    }, [selectedLabel, tasks]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"filtercontainer\">\r\n                <i className={`fas fa-bars menu-icon mr-3 + ${navOpenStatus ? \"display-none\" : \"\"}`} onClick={navStatusHandler}></i>\r\n                <Dropdown style={{ display: 'inline-block' }}>\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        <i className=\"fas fa-sort mr-2\"></i>\r\n                        Sort by: {SortValue}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item eventKey=\"Due Date\" onSelect={(k) => SortValueHandler(k)} >Due Date</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Priority\" onSelect={(k) => SortValueHandler(k)}>Priority</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n\r\n                <Button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ display: 'inline-block', float: 'right' }}\r\n                    onClick={() => setTaskFormShow(true)}>\r\n                    Add Task\r\n                        <i className=\"fas fa-plus ml-2\"></i>\r\n                </Button>\r\n            </div>\r\n            <div className=\"taskscontainer\">\r\n                <LaneList\r\n                    lanes={lanes}\r\n                    setLanes={setLanes}\r\n                    tasks={tasks}\r\n                    setTasks={setTasks}\r\n                    filteredTasks={filteredTasks} />\r\n            </div>\r\n            <TaskForm\r\n                taskFormShow={taskFormShow}\r\n                setTaskFormShowToClose={() => setTaskFormShow(false)}\r\n                tasks={tasks}\r\n                setTasks={setTasks}\r\n                labelList={labelList} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","D:\\agile-board\\src\\components\\lanelist.js",[],"D:\\agile-board\\src\\components\\taskform.js",["51"],"D:\\agile-board\\src\\components\\lane.js",[],"D:\\agile-board\\src\\components\\tasklist.js",[],"D:\\agile-board\\src\\components\\task.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":80,"column":8,"nodeType":"58","endLine":80,"endColumn":30,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["66"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [filterHandler, selectedLabel, tasks]",{"range":"69","text":"70"},[2142,2164],"[filterHandler, selectedLabel, tasks]"]