[{"D:\\Other projects\\agile-board\\src\\index.js":"1","D:\\Other projects\\agile-board\\src\\reportWebVitals.js":"2","D:\\Other projects\\agile-board\\src\\App.js":"3","D:\\Other projects\\agile-board\\src\\components\\Main.js":"4","D:\\Other projects\\agile-board\\src\\components\\header\\Header.js":"5","D:\\Other projects\\agile-board\\src\\components\\task-lane\\LaneList.js":"6","D:\\Other projects\\agile-board\\src\\components\\header\\LabelDropdown.js":"7","D:\\Other projects\\agile-board\\src\\components\\header\\Search.js":"8","D:\\Other projects\\agile-board\\src\\components\\task-lane\\Lane.js":"9","D:\\Other projects\\agile-board\\src\\components\\ModalLoader.js":"10","D:\\Other projects\\agile-board\\src\\components\\task-lane\\LaneTitle.js":"11","D:\\Other projects\\agile-board\\src\\components\\label-form\\LabelForm.js":"12","D:\\Other projects\\agile-board\\src\\components\\task-form\\TaskForm.js":"13","D:\\Other projects\\agile-board\\src\\components\\task-lane\\Task.js":"14","D:\\Other projects\\agile-board\\src\\components\\task-form\\NameInput.js":"15","D:\\Other projects\\agile-board\\src\\components\\task-form\\DueDateInput.js":"16","D:\\Other projects\\agile-board\\src\\components\\task-form\\DescriptionInput.js":"17","D:\\Other projects\\agile-board\\src\\components\\task-form\\PriorityInput.js":"18","D:\\Other projects\\agile-board\\src\\components\\task-form\\TaskTypeInput.js":"19","D:\\Other projects\\agile-board\\src\\components\\TaskModal.js":"20","D:\\Other projects\\agile-board\\src\\DataContext.js":"21","D:\\Other projects\\agile-board\\src\\data\\index.js":"22"},{"size":588,"mtime":1655433816911,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":316,"mtime":1655421139409,"results":"26","hashOfConfig":"24"},{"size":1421,"mtime":1658880805582,"results":"27","hashOfConfig":"24"},{"size":926,"mtime":1653189149117,"results":"28","hashOfConfig":"24"},{"size":2792,"mtime":1658881844164,"results":"29","hashOfConfig":"24"},{"size":1933,"mtime":1655438573251,"results":"30","hashOfConfig":"24"},{"size":279,"mtime":1655438552107,"results":"31","hashOfConfig":"24"},{"size":2535,"mtime":1658895511577,"results":"32","hashOfConfig":"24"},{"size":715,"mtime":1653199584266,"results":"33","hashOfConfig":"24"},{"size":1419,"mtime":1658895705474,"results":"34","hashOfConfig":"24"},{"size":3048,"mtime":1658896043633,"results":"35","hashOfConfig":"24"},{"size":3721,"mtime":1655434565444,"results":"36","hashOfConfig":"24"},{"size":2277,"mtime":1658896173517,"results":"37","hashOfConfig":"24"},{"size":406,"mtime":1655418913018,"results":"38","hashOfConfig":"24"},{"size":398,"mtime":1655419783291,"results":"39","hashOfConfig":"24"},{"size":399,"mtime":1655419719798,"results":"40","hashOfConfig":"24"},{"size":575,"mtime":1658879369514,"results":"41","hashOfConfig":"24"},{"size":784,"mtime":1658896103854,"results":"42","hashOfConfig":"24"},{"size":3482,"mtime":1655419969217,"results":"43","hashOfConfig":"24"},{"size":864,"mtime":1658895891418,"results":"44","hashOfConfig":"24"},{"size":2615,"mtime":1658879355847,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1x7e9xi",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\Other projects\\agile-board\\src\\index.js",[],["93","94"],"D:\\Other projects\\agile-board\\src\\reportWebVitals.js",[],"D:\\Other projects\\agile-board\\src\\App.js",[],"D:\\Other projects\\agile-board\\src\\components\\Main.js",["95"],"import React, { useState, useEffect } from 'react';\r\n\r\n//importing components\r\nimport Header from './header/Header';\r\nimport LaneList from './task-lane/LaneList';\r\nimport { laneData } from '../data';\r\nimport { useData } from '../DataContext';\r\n\r\nconst Main = () => {\r\n\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const { selectedLabel, setSelectedLabel } = useData();\r\n\r\n    const [lanes, setLanes] = useState(laneData);\r\n\r\n    const [filteredLanes, setFilteredLanes] = useState(lanes);\r\n\r\n\r\n    const filterHandler = () => {\r\n        var filtered = lanes;\r\n        if (selectedLabel === 0) {\r\n            filtered = lanes.map(lane => {\r\n                return { ...lane, tasks: lane.tasks.filter(task => task.taskname.includes(searchValue)) }\r\n            });\r\n        } else {\r\n            filtered = lanes.map(lane => {\r\n                return { ...lane, tasks: lane.tasks.filter(t => t.labelid === selectedLabel && t.taskname.includes(searchValue)) }\r\n            })\r\n        }\r\n        setFilteredLanes(filtered)\r\n    }\r\n\r\n    useEffect(() => {\r\n        filterHandler();\r\n    }, [selectedLabel, lanes, searchValue]);\r\n\r\n    return (\r\n        <>\r\n            <Header setSelectedLabel={setSelectedLabel} setSearchValue={setSearchValue} />\r\n            <LaneList filteredLanes={filteredLanes} setFilteredLanes={setFilteredLanes} setLanes={setLanes} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;","D:\\Other projects\\agile-board\\src\\components\\header\\Header.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-lane\\LaneList.js",[],"D:\\Other projects\\agile-board\\src\\components\\header\\LabelDropdown.js",[],"D:\\Other projects\\agile-board\\src\\components\\header\\Search.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-lane\\Lane.js",["96","97"],"D:\\Other projects\\agile-board\\src\\components\\ModalLoader.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-lane\\LaneTitle.js",[],"D:\\Other projects\\agile-board\\src\\components\\label-form\\LabelForm.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\TaskForm.js",["98","99","100","101"],"import React, { useState } from 'react';\r\nimport { Modal, Form, Container, Row, Col } from 'react-bootstrap';\r\nimport NameInput from './NameInput';\r\nimport TaskTypeInput from './TaskTypeInput';\r\nimport DescriptionInput from './DescriptionInput';\r\nimport DueDateInput from './DueDateInput';\r\nimport PriorityInput from './PriorityInput';\r\n\r\nconst TaskForm = ({ closeForm, entity, entityType }) => {\r\n\r\n    const [taskname, setTaskName] = useState(entity.taskname);\r\n    const [duedate, setDuedate] = useState(entity.duedate);\r\n    const [priority, setPriority] = useState(entityType === 'task' ? entity.priority : 3);\r\n    const [description, setDescription] = useState(entity.description);\r\n    const [labelId, setLabelId] = useState(entity.labelid);\r\n\r\n    const [task, setTask] = useState(\r\n        {\r\n            id: Math.random() * 1000,\r\n            labelid: 1,\r\n            taskname: 'Misspelling on Navbar',\r\n            description: 'this is a demo description',\r\n            duedate: '2021-02-12',\r\n            priority: 3,\r\n            laneid: 1\r\n        }\r\n    )\r\n\r\n\r\n    const CreateTask = (e) => {\r\n        e.preventDefault();\r\n        // Dispatch(addTask(newtask()));\r\n        closeForm();\r\n    }\r\n\r\n    const UpdateTask1 = (e) => {\r\n        e.preventDefault();\r\n        // Dispatch(updateTask(updatedtask()));\r\n        closeForm();\r\n    }\r\n\r\n\r\n    function newtask() {\r\n        return {\r\n            'id': Math.random() * 1000,\r\n            'taskname': taskname,\r\n            'description': description,\r\n            'duedate': duedate,\r\n            'priority': priority,\r\n            'labelid': labelId,\r\n            'laneid': entity.id\r\n        }\r\n    }\r\n\r\n    function updatedtask() {\r\n        var task = {\r\n            'id': entity.id,\r\n            'taskname': taskname,\r\n            'description': description,\r\n            'duedate': duedate,\r\n            'priority': priority,\r\n            'labelid': labelId,\r\n            'laneid': entity.laneid\r\n        }\r\n        return task;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title as=\"h6\" id=\"contained-modal-title-vcenter\">\r\n                    New Task\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md=\"8\">\r\n                                <TaskTypeInput labelId={labelId} setLabelId={setLabelId} />\r\n                                <NameInput taskname={taskname} setTaskName={setTaskName} />\r\n                                <DescriptionInput description={description} setDescription={setDescription} />\r\n                            </Col>\r\n                            <Col md=\"4\">\r\n                                <DueDateInput duedate={duedate} setDuedate={setDuedate} />\r\n                                <PriorityInput priority={priority} setPriority={setPriority} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {\r\n                    entityType === \"task\"\r\n                        ?\r\n                        <button className=\"main-btn yellow\" onClick={(e) => UpdateTask1(e)} type=\"submit\">Update Task</button>\r\n                        :\r\n                        <button className=\"main-btn yellow\" onClick={(e) => CreateTask(e)} type=\"submit\">Create Task</button>\r\n                }\r\n                <button className=\"main-btn grey\" variant=\"secondary\" onClick={closeForm}>Cancel</button>\r\n            </Modal.Footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskForm;","D:\\Other projects\\agile-board\\src\\components\\task-lane\\Task.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\NameInput.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\DueDateInput.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\DescriptionInput.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\PriorityInput.js",[],"D:\\Other projects\\agile-board\\src\\components\\task-form\\TaskTypeInput.js",[],"D:\\Other projects\\agile-board\\src\\components\\TaskModal.js",[],"D:\\Other projects\\agile-board\\src\\DataContext.js",[],"D:\\Other projects\\agile-board\\src\\data\\index.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":36,"column":8,"nodeType":"108","endLine":36,"endColumn":43,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":16},{"ruleId":"110","severity":1,"message":"115","line":17,"column":12,"nodeType":"112","messageId":"113","endLine":17,"endColumn":16},{"ruleId":"110","severity":1,"message":"116","line":17,"column":18,"nodeType":"112","messageId":"113","endLine":17,"endColumn":25},{"ruleId":"110","severity":1,"message":"117","line":43,"column":14,"nodeType":"112","messageId":"113","endLine":43,"endColumn":21},{"ruleId":"110","severity":1,"message":"118","line":55,"column":14,"nodeType":"112","messageId":"113","endLine":55,"endColumn":25},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["121"],"no-unused-vars","'ModalLoader' is defined but never used.","Identifier","unusedVar","'TaskForm' is defined but never used.","'task' is assigned a value but never used.","'setTask' is assigned a value but never used.","'newtask' is defined but never used.","'updatedtask' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},"Update the dependencies array to be: [selectedLabel, lanes, searchValue, filterHandler]",{"range":"124","text":"125"},[1104,1139],"[selectedLabel, lanes, searchValue, filterHandler]"]